DROP DATABASE IF EXISTS BDVENTAS;
CREATE DATABASE BDVENTAS;
USE BDVENTAS;

DROP TABLE IF EXISTS EMPLEADO;
CREATE TABLE EMPLEADO
(COD_EMP CHAR(3) PRIMARY KEY,
NOM VARCHAR(60),
CAR_EMP VARCHAR(60),
SUE_EMP DECIMAL(8,2),
JEF_EMP CHAR(3),
CONSTRAINT FK_COD_EMP FOREIGN KEY (JEF_EMP)
REFERENCES EMPLEADO(COD_EMP));

INSERT INTO EMPLEADO VALUES('E01','SUAREZ','GERENTE',800.60,NULL);
INSERT INTO EMPLEADO VALUES('E02','REBOREDO','ADMINISTRADOR',900.60,'E01');
INSERT INTO EMPLEADO VALUES('E03','FORLAN','ALMACEN',1500.50,'E02');
INSERT INTO EMPLEADO VALUES('E04','CAVANI','LIMPIEZA',3000.70,'E02');
SELECT * FROM EMPLEADO;

/*CATEGORIA*/
DROP TABLE IF EXISTS CATEGORIA;
CREATE TABLE CATEGORIA
(COD_CAT INT PRIMARY KEY AUTO_INCREMENT,
NOM_CAT VARCHAR(60));

INSERT INTO CATEGORIA VALUES(NULL,'CASACAS');
INSERT INTO CATEGORIA VALUES(NULL,'POLO');
INSERT INTO CATEGORIA VALUES(NULL,'ZAPATO');
INSERT INTO CATEGORIA VALUES(NULL,'BLUSAS');
SELECT * FROM CATEGORIA;


/*CREAR LA TABLA MARCA*/
DROP TABLE IF EXISTS MARCA;
CREATE TABLE MARCA
(COD_MAR INT PRIMARY KEY AUTO_INCREMENT,
 NOM_MAR VARCHAR(60));
 
INSERT INTO MARCA VALUES (NULL,'TOPITOP');
INSERT INTO MARCA VALUES (NULL,'TOTTUS');
INSERT INTO MARCA VALUES (NULL,'SAGA FALABELLA');
INSERT INTO MARCA VALUES (NULL,'PLATANITOS');
SELECT * FROM MARCA;

DROP TABLE IF EXISTS PRODUCTO;
CREATE TABLE PRODUCTO
(COD_PROD INT PRIMARY KEY AUTO_INCREMENT,
 NOM_PROD VARCHAR(60),
 PRE_PROD DECIMAL(8,2),
 STOCK_PROD INT,
 COD_CAT INT,
 COD_MAR INT,
 CONSTRAINT FK_COD_CAT FOREIGN KEY(COD_CAT) 
 REFERENCES CATEGORIA(COD_CAT),
  CONSTRAINT FK_COD_MAR FOREIGN KEY(COD_MAR) 
 REFERENCES MARCA(COD_MAR)
 )
 
 ENGINE=INNODB;

INSERT INTO PRODUCTO VALUES(NULL,'CASACAS ADIDAS',379.00,23,1,1);
INSERT INTO PRODUCTO VALUES(NULL,'POLERA UNDER ARMOUR',69.90,43,2,1);
INSERT INTO PRODUCTO VALUES(NULL,'POLERA BILLABONG',56.55,56,2,1);
INSERT INTO PRODUCTO VALUES(NULL,'ZAPATILLA HUS PUPIES',189.00,23,3,2);

DROP TABLE IF EXISTS CLIENTE;
CREATE TABLE CLIENTE
(COD_CLI CHAR(3) PRIMARY KEY,
NOM_CLI VARCHAR(70)NOT NULL,
APE_CLI VARCHAR(70)NOT NULL,
EDAD_CLI INT NOT NULL,
RUC_CLI CHAR(11) NULL,
DIR_CLI VARCHAR(90)NULL
)ENGINE=INNODB;

INSERT INTO CLIENTE VALUES('C01','JOSE','TIZNADO',14,'10254548487','AV 28 DE JULIO 3433');
INSERT INTO CLIENTE VALUES('C02','MIGUEL','ZAPATA',18,'2042548487','AV 28 DE JULIO 3433');
INSERT INTO CLIENTE VALUES('C03','PABLO','ALMIRAR',8,'1025348487','AV 28 DE JULIO 3433');
INSERT INTO CLIENTE VALUES('C04','LUIS','SOTO',15,'20543484875','AV 28 DE JULIO 3433');
SELECT * FROM CLIENTE;

/*PEDIDOS*/

DROP TABLE IF EXISTS PEDIDO;
CREATE TABLE PEDIDO
(COD_PED INT PRIMARY KEY AUTO_INCREMENT,
COD_CLI CHAR(3),
COD_EMP CHAR(3),
FECH_PED DATE,
TOT_PED DECIMAL(15,2),
CONSTRAINT FK_COD_CLI_PED1 FOREIGN KEY(COD_CLI)
REFERENCES CLIENTE(COD_CLI),
CONSTRAINT FK_COD_EMP_PED1 FOREIGN KEY(COD_EMP)
REFERENCES EMPLEADO(COD_EMP)
);
SELECT * FROM PEDIDO;

/*DETALLE_PEDIDOS*/
DROP TABLE IF EXISTS DETALLE_PEDIDO;
CREATE TABLE DETALLE_PEDIDO
(COD_PED INT,
COD_PROD INT,
PRE_PED DECIMAL(8,2),
STOCK_PED INT,
DESC_PED DECIMAL(8,2),
TOTUNI_PED DECIMAL(15,2),
CONSTRAINT FK_COD_DET_PED2 FOREIGN KEY(COD_PED)
REFERENCES PEDIDO(COD_PED),
CONSTRAINT FK_COD_PROD_PED2 FOREIGN KEY(COD_PROD)
REFERENCES PRODUCTO(COD_PROD)
);

SELECT * FROM DETALLE_PEDIDO;

DROP VIEW IF EXISTS VW_BUS_PROD_CAT;
CREATE VIEW VW_BUS_PROD_CAT
AS
  SELECT P.COD_PROD,P.NOM_PROD,
         P.PRE_PROD,P.STOCK_PROD,
         C.NOM_CAT
  FROM CATEGORIA C INNER JOIN PRODUCTO P
  ON C.COD_CAT=P.COD_CAT
;

SELECT * FROM VW_BUS_PROD_CAT;

/*Crear strore procedure Registro de producto*/
DROP PROCEDURE IF EXISTS SP_INS_ACT_PROD;
DELIMITER $$
CREATE PROCEDURE SP_INS_ACT_PROD
(NOM VARCHAR(50),PRE DECIMAL(8,2),
STO INT,CAT INT,MAR INT)   
BEGIN
	INSERT INTO PRODUCTO VALUES(NULL,NOM,PRE,STO,CAT,MAR);
END $$
DELIMITER $$;

SELECT * FROM PRODUCTO;
CALL SP_INS_ACT_PROD('ARMANDO',23.33,33,2,2);

/*ELIMINAR PRODUCTO */
DROP PROCEDURE IF EXISTS SP_ELI_PROD;
DELIMITER $$
CREATE PROCEDURE SP_ELI_PROD
(COD INT)
BEGIN
DECLARE C INT;
SET C=(SELECT COUNT(*) FROM PRODUCTO WHERE COD_PROD=COD);
IF C>0 THEN
	BEGIN
		DELETE FROM PRODUCTO WHERE COD_PROD=COD;
		SELECT 'REGISTRO ELIMINADO';
	END;
ELSE
	SELECT 'ERROR NO SE ELIMINO';
END IF;
END $$
DELIMITER $$;

SELECT * FROM PRODUCTO;
CALL SP_ELI_PROD(21);

/* CREAR UN PROCEDIMIENTO ALMACENADO QUE BUSQUE POR CODIGO Y NOMBRE PRODUCTO*/	
DROP PROCEDURE IF EXISTS SP_BUS_PROD;
DELIMITER $$
CREATE PROCEDURE SP_BUS_PROD
(COD VARCHAR(20),NOM VARCHAR(60))
BEGIN
	SELECT *FROM PRODUCTO
	WHERE COD_PROD LIKE CONCAT('%',COD,'%') OR 
		  NOM_PROD LIKE CONCAT('%',NOM,'%');
END $$
DELIMITER $$;

CALL SP_BUS_PROD('NULL','A');


/*CREAR UN PROCEDIMIENTO ALAMECENADO QUE ME PERMITA ACTUALIZAR LOS REGISTRO DE MI PRODUCTO*/
DROP PROCEDURE IF EXISTS SP_ACT_PROD;
DELIMITER $$
CREATE PROCEDURE SP_ACT_PROD
(COD INT,NOM VARCHAR(60),PRE FLOAT,STO INT,CAT INT)
BEGIN
	IF COD = 0 THEN
		SELECT "ERROR, NO COLOCASTE EL CODIGO";
	ELSEIF NOM='' OR NOM IS NULL THEN
		SELECT "ERROR, NO COLOCASTE EL NOMBRE";
	ELSE
		BEGIN
			UPDATE PRODUCTO SET
				NOM_PROD=NOM,PRE_PROD=PRE,       
				STOCK_PROD=STO,COD_CAT=CAT
			WHERE COD_PROD=COD;
			SELECT 'REGISTRO ACTUALIZADO';
        END;
	END IF;
END $$
DELIMITER $$;

CALL SP_ACT_PROD(NULL,'',50,10,3);



/*BUSQUE DE LA TABLA CATEGORIA*/
DROP PROCEDURE IF EXISTS SP_BUS_CAT;
DELIMITER $$
CREATE PROCEDURE SP_BUS_CAT
(COD INT,NOM VARCHAR(60))
BEGIN
	SELECT *FROM categoria
	WHERE COD_CAT=COD OR NOM_CAT=NOM;
END $$
DELIMITER $$;

CALL SP_BUS_CAT(NULL,'CASACAS ADIDAS');

/*REGISTRE
 DE LA TABLA CATEGORIA*/
 
DROP PROCEDURE IF EXISTS SP_INS_CAT;
DELIMITER $$
CREATE PROCEDURE SP_INS_CAT
(COD INT, NOM VARCHAR(60))
BEGIN
	INSERT INTO categoria VALUES(NULL,NOM);
	SELECT * FROM categoria;
END$$
DELIMITER $$;

CALL SP_INS_CAT(NULL,'ZAPATOS');

/*ELIMINAR
 DE LA TABLA ELIMINAR*/
 
DROP PROCEDURE IF EXISTS SP_ELI_CAT;
DELIMITER $$
CREATE PROCEDURE SP_ELI_CAT
(XX VARCHAR(40))
BEGIN
DECLARE C INT;

SET C=(SELECT COUNT(*) FROM categoria WHERE NOM_CAT=XX);
IF C>0 THEN
	BEGIN
		DELETE FROM categoria WHERE NOM_CAT=XX;
		SELECT 'REGISTRO ELIMINADO';
	END;
ELSE
	SELECT 'ERROR NO SE ELIMINO';
END IF;
END $$
DELIMITER $$;

CALL SP_ELI_CAT('ZAPATOS');
SELECT * FROM categoria;


/*ACTUALIZAR DE LA TABLA BUSCAR*/ 
DROP PROCEDURE IF EXISTS SP_ACTU_CAT;
DELIMITER $$
CREATE PROCEDURE SP_ACTU_CAT
(COD INT,NOM VARCHAR(60))
BEGIN
	UPDATE CATEGORIA SET NOM_CAT=NOM WHERE COD_CAT=COD;
END$$
DELIMITER $$;

CALL SP_ACTU_CAT(2,'PONCHOS');
SELECT * FROM categoria;
